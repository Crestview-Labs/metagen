"""consolidated_models

Revision ID: 9437fde74565
Revises:
Create Date: 2025-07-04 15:59:51.136470

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "9437fde74565"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "compact_memories",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("start_time", sa.DateTime(timezone=True), nullable=False),
        sa.Column("end_time", sa.DateTime(timezone=True), nullable=False),
        sa.Column("session_ids", sa.JSON(), nullable=True),
        sa.Column("summary", sa.Text(), nullable=False),
        sa.Column("key_points", sa.JSON(), nullable=True),
        sa.Column("entities", sa.JSON(), nullable=True),
        sa.Column("semantic_labels", sa.JSON(), nullable=True),
        sa.Column("turn_count", sa.Integer(), nullable=True),
        sa.Column("token_count", sa.Integer(), nullable=True),
        sa.Column("compressed_token_count", sa.Integer(), nullable=True),
        sa.Column("processed", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_compact_memories_created_at", "compact_memories", ["created_at"], unique=False
    )
    op.create_index(
        "idx_compact_memories_processed", "compact_memories", ["processed"], unique=False
    )
    op.create_index(
        "idx_compact_memories_time_range",
        "compact_memories",
        ["start_time", "end_time"],
        unique=False,
    )
    op.create_table(
        "conversation_turns",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("session_id", sa.String(), nullable=False),
        sa.Column("turn_number", sa.Integer(), nullable=False),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.Column("user_query", sa.Text(), nullable=False),
        sa.Column("agent_response", sa.Text(), nullable=False),
        sa.Column("llm_context", sa.JSON(), nullable=True),
        sa.Column("tools_used", sa.JSON(), nullable=True),
        sa.Column("tool_results", sa.JSON(), nullable=True),
        sa.Column("trace_id", sa.String(length=32), nullable=True),
        sa.Column("total_duration_ms", sa.Float(), nullable=True),
        sa.Column("llm_duration_ms", sa.Float(), nullable=True),
        sa.Column("tools_duration_ms", sa.Float(), nullable=True),
        sa.Column("user_metadata", sa.JSON(), nullable=True),
        sa.Column("agent_metadata", sa.JSON(), nullable=True),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("error_details", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("compacted", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_turns_compacted", "conversation_turns", ["compacted"], unique=False)
    op.create_index(
        "idx_turns_session_number",
        "conversation_turns",
        ["session_id", "turn_number"],
        unique=False,
    )
    op.create_index(
        "idx_turns_session_time", "conversation_turns", ["session_id", "timestamp"], unique=False
    )
    op.create_index(
        "idx_turns_session_turn_unique",
        "conversation_turns",
        ["session_id", "turn_number"],
        unique=True,
    )
    op.create_index("idx_turns_timestamp", "conversation_turns", ["timestamp"], unique=False)
    op.create_index("idx_turns_trace_id", "conversation_turns", ["trace_id"], unique=False)
    op.create_table(
        "semantic_memories",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("topic", sa.Text(), nullable=False),
        sa.Column("tags", sa.JSON(), nullable=True),
        sa.Column("category", sa.String(), nullable=False),
        sa.Column("title", sa.Text(), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("summary", sa.Text(), nullable=False),
        sa.Column("source_memory_ids", sa.JSON(), nullable=True),
        sa.Column("access_count", sa.Integer(), nullable=False),
        sa.Column("last_accessed", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_semantic_memories_access_count", "semantic_memories", ["access_count"], unique=False
    )
    op.create_index(
        "idx_semantic_memories_category", "semantic_memories", ["category"], unique=False
    )
    op.create_index(
        "idx_semantic_memories_created_at", "semantic_memories", ["created_at"], unique=False
    )
    op.create_index("idx_semantic_memories_topic", "semantic_memories", ["topic"], unique=False)
    op.create_table(
        "task_templates",
        sa.Column("id", sa.String(length=255), nullable=False),
        sa.Column("name", sa.String(length=500), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column(
            "task_type",
            sa.Enum(
                "CODE_GENERATION",
                "DATA_ANALYSIS",
                "FILE_MANIPULATION",
                "RESEARCH",
                "DOCUMENTATION",
                "TESTING",
                "DEPLOYMENT",
                "CUSTOM",
                name="tasktype",
            ),
            nullable=False,
        ),
        sa.Column("title_template", sa.Text(), nullable=False),
        sa.Column("description_template", sa.Text(), nullable=False),
        sa.Column("default_requirements", sa.JSON(), nullable=False),
        sa.Column("default_deliverables", sa.JSON(), nullable=False),
        sa.Column(
            "default_priority",
            sa.Enum("LOW", "MEDIUM", "HIGH", "URGENT", name="taskpriority"),
            nullable=False,
        ),
        sa.Column("execution_context_template", sa.JSON(), nullable=False),
        sa.Column("required_agent_capabilities", sa.JSON(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("usage_count", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_templates_created", "task_templates", ["created_at"], unique=False)
    op.create_index("idx_templates_name", "task_templates", ["name"], unique=False)
    op.create_index("idx_templates_type", "task_templates", ["task_type"], unique=False)
    op.create_index("idx_templates_usage", "task_templates", ["usage_count"], unique=False)
    op.create_table(
        "tasks",
        sa.Column("id", sa.String(length=255), nullable=False),
        sa.Column("title", sa.String(length=500), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column(
            "task_type",
            sa.Enum(
                "CODE_GENERATION",
                "DATA_ANALYSIS",
                "FILE_MANIPULATION",
                "RESEARCH",
                "DOCUMENTATION",
                "TESTING",
                "DEPLOYMENT",
                "CUSTOM",
                name="tasktype",
            ),
            nullable=False,
        ),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING",
                "IN_PROGRESS",
                "COMPLETED",
                "FAILED",
                "CANCELLED",
                "PAUSED",
                name="taskstatus",
            ),
            nullable=False,
        ),
        sa.Column(
            "priority",
            sa.Enum("LOW", "MEDIUM", "HIGH", "URGENT", name="taskpriority"),
            nullable=False,
        ),
        sa.Column("agent_id", sa.String(length=255), nullable=True),
        sa.Column("execution_context", sa.JSON(), nullable=False),
        sa.Column("requirements", sa.JSON(), nullable=False),
        sa.Column("deliverables", sa.JSON(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("started_at", sa.DateTime(), nullable=True),
        sa.Column("completed_at", sa.DateTime(), nullable=True),
        sa.Column("parent_task_id", sa.String(length=255), nullable=True),
        sa.Column("dependencies", sa.JSON(), nullable=False),
        sa.Column("subtasks", sa.JSON(), nullable=False),
        sa.Column("result", sa.JSON(), nullable=True),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.Column("artifacts", sa.JSON(), nullable=False),
        sa.Column("user_feedback", sa.Text(), nullable=True),
        sa.Column("user_rating", sa.Integer(), nullable=True),
        sa.CheckConstraint("user_rating >= 1 AND user_rating <= 5", name="check_user_rating_range"),
        sa.ForeignKeyConstraint(["parent_task_id"], ["tasks.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_tasks_agent", "tasks", ["agent_id"], unique=False)
    op.create_index("idx_tasks_agent_status", "tasks", ["agent_id", "status"], unique=False)
    op.create_index("idx_tasks_created", "tasks", ["created_at"], unique=False)
    op.create_index("idx_tasks_parent", "tasks", ["parent_task_id"], unique=False)
    op.create_index("idx_tasks_priority", "tasks", ["priority"], unique=False)
    op.create_index("idx_tasks_status", "tasks", ["status"], unique=False)
    op.create_index("idx_tasks_status_type", "tasks", ["status", "task_type"], unique=False)
    op.create_index("idx_tasks_type", "tasks", ["task_type"], unique=False)
    op.create_index("idx_tasks_updated", "tasks", ["updated_at"], unique=False)
    op.create_table(
        "task_dependencies",
        sa.Column("dependent_task_id", sa.String(length=255), nullable=False),
        sa.Column("dependency_task_id", sa.String(length=255), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("dependency_type", sa.String(length=50), nullable=False),
        sa.ForeignKeyConstraint(["dependency_task_id"], ["tasks.id"]),
        sa.ForeignKeyConstraint(["dependent_task_id"], ["tasks.id"]),
        sa.PrimaryKeyConstraint("dependent_task_id", "dependency_task_id"),
    )
    op.create_index(
        "idx_dependencies_dependency", "task_dependencies", ["dependency_task_id"], unique=False
    )
    op.create_index(
        "idx_dependencies_dependent", "task_dependencies", ["dependent_task_id"], unique=False
    )
    op.create_index("idx_dependencies_type", "task_dependencies", ["dependency_type"], unique=False)
    op.create_table(
        "task_executions",
        sa.Column("id", sa.String(length=255), nullable=False),
        sa.Column("task_id", sa.String(length=255), nullable=False),
        sa.Column("agent_id", sa.String(length=255), nullable=False),
        sa.Column("started_at", sa.DateTime(), nullable=False),
        sa.Column("completed_at", sa.DateTime(), nullable=True),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING",
                "IN_PROGRESS",
                "COMPLETED",
                "FAILED",
                "CANCELLED",
                "PAUSED",
                name="taskstatus",
            ),
            nullable=False,
        ),
        sa.Column("context_snapshot", sa.JSON(), nullable=False),
        sa.Column("steps_completed", sa.JSON(), nullable=False),
        sa.Column("current_step", sa.String(length=500), nullable=True),
        sa.Column("result", sa.JSON(), nullable=True),
        sa.Column("error_details", sa.JSON(), nullable=True),
        sa.Column("logs", sa.JSON(), nullable=False),
        sa.Column("total_duration_ms", sa.Integer(), nullable=True),
        sa.Column("llm_calls_count", sa.Integer(), nullable=False),
        sa.Column("tool_calls_count", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["task_id"], ["tasks.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_executions_agent", "task_executions", ["agent_id"], unique=False)
    op.create_index(
        "idx_executions_agent_started", "task_executions", ["agent_id", "started_at"], unique=False
    )
    op.create_index("idx_executions_started", "task_executions", ["started_at"], unique=False)
    op.create_index("idx_executions_status", "task_executions", ["status"], unique=False)
    op.create_index("idx_executions_task", "task_executions", ["task_id"], unique=False)
    op.create_index(
        "idx_executions_task_status", "task_executions", ["task_id", "status"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("idx_executions_task_status", table_name="task_executions")
    op.drop_index("idx_executions_task", table_name="task_executions")
    op.drop_index("idx_executions_status", table_name="task_executions")
    op.drop_index("idx_executions_started", table_name="task_executions")
    op.drop_index("idx_executions_agent_started", table_name="task_executions")
    op.drop_index("idx_executions_agent", table_name="task_executions")
    op.drop_table("task_executions")
    op.drop_index("idx_dependencies_type", table_name="task_dependencies")
    op.drop_index("idx_dependencies_dependent", table_name="task_dependencies")
    op.drop_index("idx_dependencies_dependency", table_name="task_dependencies")
    op.drop_table("task_dependencies")
    op.drop_index("idx_tasks_updated", table_name="tasks")
    op.drop_index("idx_tasks_type", table_name="tasks")
    op.drop_index("idx_tasks_status_type", table_name="tasks")
    op.drop_index("idx_tasks_status", table_name="tasks")
    op.drop_index("idx_tasks_priority", table_name="tasks")
    op.drop_index("idx_tasks_parent", table_name="tasks")
    op.drop_index("idx_tasks_created", table_name="tasks")
    op.drop_index("idx_tasks_agent_status", table_name="tasks")
    op.drop_index("idx_tasks_agent", table_name="tasks")
    op.drop_table("tasks")
    op.drop_index("idx_templates_usage", table_name="task_templates")
    op.drop_index("idx_templates_type", table_name="task_templates")
    op.drop_index("idx_templates_name", table_name="task_templates")
    op.drop_index("idx_templates_created", table_name="task_templates")
    op.drop_table("task_templates")
    op.drop_index("idx_semantic_memories_topic", table_name="semantic_memories")
    op.drop_index("idx_semantic_memories_created_at", table_name="semantic_memories")
    op.drop_index("idx_semantic_memories_category", table_name="semantic_memories")
    op.drop_index("idx_semantic_memories_access_count", table_name="semantic_memories")
    op.drop_table("semantic_memories")
    op.drop_index("idx_turns_trace_id", table_name="conversation_turns")
    op.drop_index("idx_turns_timestamp", table_name="conversation_turns")
    op.drop_index("idx_turns_session_turn_unique", table_name="conversation_turns")
    op.drop_index("idx_turns_session_time", table_name="conversation_turns")
    op.drop_index("idx_turns_session_number", table_name="conversation_turns")
    op.drop_index("idx_turns_compacted", table_name="conversation_turns")
    op.drop_table("conversation_turns")
    op.drop_index("idx_compact_memories_time_range", table_name="compact_memories")
    op.drop_index("idx_compact_memories_processed", table_name="compact_memories")
    op.drop_index("idx_compact_memories_created_at", table_name="compact_memories")
    op.drop_table("compact_memories")
    # ### end Alembic commands ###
